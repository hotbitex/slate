<h1 id='25e54147de'>快速入门</h1><h2 id='c1ae0a8486'>接入准备</h2>
<p>如需使用API ，请先登录网页端，完成API key的申请和权限配置，再据此文档详情进行开发和交易。</p>

<p>您可以点击 <a href="https://www.hotbit.io">这里</a> 创建 API Key。</p>

<p>每个用户可创建5组Api Key，每个Api Key可对应设置读取、交易两种权限。</p>

<p>权限说明如下：</p>

<ul>
<li>读取权限：读取权限用于对数据的查询接口，例如：订单查询、成交查询等。</li>
<li>交易权限：交易权限用于下单、撤单、划转类接口。
<del>* 提币权限：提币权限用于创建提币订单、取消提币订单操作。</del></li>
</ul>

<p>创建成功后请务必记住以下信息：</p>

<ul>
<li><p><code>API Key</code> API 访问密钥</p></li>
<li><p><code>Secret Key</code> 签名认证加密所使用的密钥（仅申请时可见）</p></li>
</ul>

<!-- 
<aside class="notice">
创建 API Key 时可以绑定 IP 地址，**未绑定 IP 地址的 API Key 有效期为90天**。出于安全考虑，强烈建议您绑定 IP 地址。
</aside>
 -->

<aside class="warning">
风险提示：这两个密钥与账号安全紧密相关，无论何时都请勿将二者同时向其它人透露。API Key的泄露可能会造成您的资产损失（即使未开通提币权限），若发现API Key泄露请尽快删除该API Key。
</aside>
<h2 id='sdk'>SDK与代码示例</h2>
<p><strong>SDK（推荐）</strong></p>

<p><a href="https://github.com/hotbitex">Java</a> | <a href="https://github.com/hotbitex">Python3</a> | <a href="https://github.com/hotbitex">Go</a></p>

<p><strong>其它代码示例</strong></p>

<p><a href="https://github.com/hotbitex?tab=repositories">https://github.com/hotbitex?tab=repositories</a></p>

<table><thead>
<tr>
<th>接口</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td><a href="#">GET /api/v2/server.time</a></td>
<td>获取系统时间</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/balance.query</a></td>
<td>获取用户资产</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/asset.list</a></td>
<td>获取平台所有资产类型和精度，prec为精确到小数点后多少位</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/order.put_limit</a></td>
<td>限价交易</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/order.cancel</a></td>
<td>取消交易</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/order.batch_cancel</a></td>
<td>批量取消交易</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/order.deals</a></td>
<td>获取已成交的订单细节</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/order.finished_detail</a></td>
<td>根据订单号查询已完成订单</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/order.book </a></td>
<td>获取交易列表</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/order.depth</a></td>
<td>获取交易深度</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/order.pending</a></td>
<td>查询未实施订单</td>
</tr>
<tr>
<td><a href="#">POST /api/v2/order.finished</a></td>
<td>查询用户的已完成订单</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.list</a></td>
<td>获取交易对列表</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.last</a></td>
<td>获取指定交易对的最新价格</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.deals</a></td>
<td>查询交易对交易记录</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.user_deals</a></td>
<td>查询用户交易记录</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.kline</a></td>
<td>k线查询</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.status</a></td>
<td>获取过去指定时间段market当前最新涨跌幅，交易量，最高/最低价格等状态</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.status_today</a></td>
<td>获取今天market状态</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.status24h</a></td>
<td>获取过去24小时内的market涨跌幅，交易量，最高/最低价格等状态</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/market.summary</a></td>
<td>market概要</td>
</tr>
<tr>
<td><a href="#">GET /api/v2/allticker</a></td>
<td>获取全市场交易对的最新成交信息</td>
</tr>
</tbody></table>

<aside class="notice">
其他接口不可访问，如果尝试访问，系统会返回 “error-code 403”。
</aside>
<h2 id='5076603a3e'>接口类型</h2>
<p>hotbit为用户提供两种接口，您可根据自己的使用场景和偏好来选择适合的方式进行查询行情、交易或提币。</p>
<h3 id='rest-api'>REST API</h3>
<p>REST，即Representational State Transfer的缩写，是目前较为流行的基于HTTP的一种通信机制，每一个URL代表一种资源。</p>

<p>交易或资产提币等一次性操作，建议开发者使用REST API进行操作。</p>
<h3 id='websocket-api'>WebSocket API</h3>
<p>WebSocket是HTML5一种新的协议（Protocol）。它实现了客户端与服务器全双工通信，通过一次简单的握手就可以建立客户端和服务器连接，服务器可以根据业务规则主动推送信息给客户端。</p>

<p>市场行情和买卖深度等信息，建议开发者使用WebSocket API进行获取。</p>

<p><strong>接口鉴权</strong></p>

<p>以上两种接口均包含公共接口和私有接口两种类型。</p>

<p>公共接口可用于获取基础信息和行情数据。公共接口无需认证即可调用。</p>

<p>私有接口可用于交易管理和账户管理。每个私有请求必须使用您的API Key进行签名验证。</p>
<h2 id='urls'>接入URLs</h2>
<p>您可以自行比较使用api.hotbit.io/api/v2和ws.hotbit.io/v2两个域名的延迟情况，选择延迟低的进行使用。</p>

<p><strong>REST API</strong></p>

<p><strong><code>https://api.hotbit.io/api/v2</code></strong></p>

<p><strong>Websocket Feed</strong></p>

<p><strong><code>wss://ws.hotbit.io/v2/</code></strong> </p>

<aside class="notice">
请使用中国大陆以外的 IP 访问 Hotbit API。
</aside>

<aside class="notice">
鉴于延迟高和稳定性差等原因，不建议通过代理的方式访问 Hotbit API。
</aside>

<aside class="notice">
为保证API服务的稳定性，建议使用新加坡AWS云服务器进行访问。如使用中国大陆境内的客户端服务器，连接的稳定性将难以保证。
</aside>
<h2 id='14619cc63a'>参数签名    </h2>
<p>用户提交的参数除sign外，都要参与签名。    </p>

<p>首先，<strong>将待签名字符串要求按照参数名进行排序(首先比较所有参数名的第一个字母，按abcd顺序排列，若遇到相同首字母，则看第二个字母，以此类推)。</strong>   </p>

<p>例如：资产查询接口balance.query(参见HTTP接口说明)的请求参数</p>

<table><thead>
<tr>
<th>参数名</th>
<th>参数类型</th>
<th>描述</th>
<th>示例</th>
</tr>
</thead><tbody>
<tr>
<td>api_key</td>
<td>string</td>
<td>用户申请的API KEY</td>
<td>6b97d781-5ffd-958f-576d96d0bbebc8c6</td>
</tr>
<tr>
<td>sign</td>
<td>string</td>
<td>请求字符串的签名值</td>
<td>C88F04701D3349D0A93A0164DC5A4CD9</td>
</tr>
<tr>
<td>assets</td>
<td>json array</td>
<td>代币符号数组，空数组表示获取全部代币资产</td>
<td>[&quot;BTC&quot;,&quot;ETH&quot;]</td>
</tr>
</tbody></table>

<p>上述请求生成签名的过程如下</p>

<ul>
<li><p>生成待签名的字符串<br>
<code>api_key=6b97d781-5ffd-958f-576d96d0bbebc8c6&amp;assets=[&quot;BTC&quot;,&quot;ETH&quot;]</code></p></li>
<li><p>将待签名字符串添加私钥参数生成最终待签名字符串。例如：
<code>api_key=6b97d781-5ffd-958f-576d96d0bbebc8c6&amp;assets=[&quot;BTC&quot;,&quot;ETH&quot;]&amp;secret_key=de8063ea6e99bc967ba6395d06fabf50</code></p></li>
<li><p>计算MD5值
<code>MD5(&quot;api_key=6b97d781-5ffd-958f-576d96d0bbebc8c6&amp;assets=[&quot;BTC&quot;,&quot;ETH&quot;]&amp;secret_key=de8063ea6e99bc967ba6395d06fabf50&quot;)</code></p></li>
</ul>

<p>算出的MD5值是：c88f04701d3349d0a93a0164dc5a4cd9</p>

<ul>
<li>将MD5值转为大写
<code>to_upper(c88f04701d3349d0a93a0164dc5a4cd9)</code></li>
</ul>

<p>得到最终的签名值是：C88F04701D3349D0A93A0164DC5A4CD9</p>

<p>上述过程完成后，balance.query发送的请求参数是：
<code>api_key=6b97d781-5ffd-958f-576d96d0bbebc8c6&amp;assets=[&quot;BTC&quot;,&quot;ETH&quot;]&amp;sign=C88F04701D3349D0A93A0164DC5A4CD9</code></p>

<p>说明：上述API Key和Secret Key仅为示例，在使用的时候替换为用户自己申请的API Key。    </p>
